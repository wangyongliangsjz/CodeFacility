<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAEdAIUDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5wCH6U2eP9y1XBHTbiP8AcN9K/QXsfiMd0e/XsIwP90fyqrAm
        1q2b2D5F4/hH8qzUTD1wI9drU17HoK2IF6Vk2S9K24Fzis5G8TQsh0qzdxb4jxUNovNaUke6Lp2rJux0
        pXRwerW/LcVyGow7Xr0PWLfBbiuO1W3wTxW8GcNVB4abbKO1dyibkB9q4LRf3dwK9BtRvgU+1Kpvcui9
        CPZSFD6ZqyY6QpWZ0Hifx+jze+H+3yT/AM0ryox1698fY832gf8AXOf+aV5WY69Gj8B4eJ/iMpFPairJ
        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
        S696znu/eoJLv3qrEuZcmuveqE9z71Wluveqc11VWMnIlnuOOtZlxce9NnuuvNZ89z71SRjKQss/zUVn
        S3HzUVdjG5Rt7npWjDce9czDc8Dmr8N1jvVNEJnSQ3XvV2K6x3rnIbr35q5Hde9RY1Ujo47v3qyl371z
        kd3jHNWEu/elYtSOhW796et371greHPWni9PrilYvmN03YHc0w3fvWN9t96ab33pWDnNd7vrzUEl571l
        td8dahe74607Cci/Ld8Hmqk11nvVKS7qpNde9VYzci1NdZ71QnuB61BNd9eaoTXOc81SRk5E8tyd3Wis
        x7nmirMrmfDcZxzV2K5rnYrnHerkV105p2M0zoYro+tW47wjvXPRXI9aspc+9KxakdFHedOanW79651L
        v3qdLv3qbGikb63fvTxdnPWsIXeOpFPF6fXilYfMbn2umfaz61jfbT60n2s0WHzGu13nvUL3eO9ZTXR9
        cVC93nvTsLmNOS7qrLd5qg9115qvJc5707EORclusd6py3PvVWS5x3qnNdehqkjNyLUl0N1FZbz89aKd
        iLmdHc+9W47j3rCSerEdx71djFSN6O596sR3WM81hR3VTpc5HWpsWpG8l3nqalS6GetYa3PpUi3RpWL5
        jcF0PXmnC796xBdmnfa6LD5ja+1n1pDdZ71jfbD60fa/eiwXNc3Q9c1E10PWso3dMa6oFzGi9371Xkuv
        eqD3PvUD3WKdhORde5znmq0lx71Ue5Jqs9x71ViHItvc89aKzXuBnminYz5jPjuPerEdx71ipP0qdLg+
        uaqxBtJce9SrcYHWsdLj8KlW596Vh3Nlbn3qVbk1irc+9SLc+9FirmyLql+1VkC575p32nPelYOY1ftV
        H2qsr7T70G5x1NFg5jSN1TGuie9Zv2ketMa6GaLBzGg9x3zUTXFUGuc96ia596dhXZde4x3qB7iqbz9a
        haf3p2EW3uOetFZzTc9aKdhXKay1Is2Kz1kINSrIRVWJNBZzUon98VmrITTxIaQ7mkJznrTxPWaJDT1k
        NAXNIXFL9orN8w04Sk0rDuaH2ik+0VQErZpPNNFhXL5uKabiqPmGmtIaLBcuNcY71G89VDIaazmmFyw0
        59ajaXPrVcyGozKTTEWDJ70VTLk0UWA//9k=
</value>
  </data>
</root>